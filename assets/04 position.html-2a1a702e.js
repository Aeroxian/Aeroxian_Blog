import{_ as t,p as e,q as i,a1 as o}from"./framework-f3fd2962.js";const s="/assets/202112081832684-c4bfa585.jpg",n="/assets/202112081829836-2702172f.jpg",a={},c=o('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>position能将所有元素改变为inline-block</p></div><h2 id="document-flow" tabindex="-1"><a class="header-anchor" href="#document-flow" aria-hidden="true">#</a> Document flow</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>默认属性position的值是static</p><p>1️⃣ static</p><p>2️⃣ absolute 如果祖先（ancestor）有position的类型则以最近的为参照来移动，否则直接参照html标签的位置</p><p>3️⃣ relative the positioning context is the element itself and the element is also not taken out of the document flow</p><p>4️⃣ fixed depends on <strong>viewport</strong></p><p>5️⃣ sticky</p></div><p><img src="'+s+'" alt="202112081832684"></p><h2 id="changine-the-position" tabindex="-1"><a class="header-anchor" href="#changine-the-position" aria-hidden="true">#</a> Changine the position</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Posting移动的位置需要有一个参照物，也就是refer to <strong>Positioning context</strong></p><p>1️⃣ top</p><p>2️⃣ right</p><p>3️⃣ bottom</p><p>4️⃣ left</p><p>以上属性要想起作用，position不能是static</p></div><p><img src="'+n+'" alt="202112081829836"></p><h2 id="z-index" tabindex="-1"><a class="header-anchor" href="#z-index" aria-hidden="true">#</a> z-index</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>work when use position,因为元素脱离了文档流了，会产生覆盖的效果.默认是0</p></div><h2 id="overflow" tabindex="-1"><a class="header-anchor" href="#overflow" aria-hidden="true">#</a> overflow</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>当元素在容器中溢出时可以使用它来使得它的定位超出容器之后不可见</p></div>',11),p=[c];function r(d,l){return e(),i("div",null,p)}const m=t(a,[["render",r],["__file","04 position.html.vue"]]);export{m as default};
