import{_ as e,M as p,p as o,q as c,R as n,t as s,N as t,a1 as i}from"./framework-f3fd2962.js";const l="/assets/IMG_20230322_154506-ec62b211.png",u="/assets/IMG_20230322_154652-15bafb6b.png",r="/assets/IMG_20230322_154836-8b82a62e.png",k={},d=i('<h1 id="博客图片设置" tabindex="-1"><a class="header-anchor" href="#博客图片设置" aria-hidden="true">#</a> 博客图片设置</h1><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>在 github 上使用的仓库 <code>https://&lt;USERNAME&gt;.github.io/</code> 这样在部署的时候 base 就是 <code>/</code></p><p>在使用 markdown 引入图片的时候就不用关心 base</p><p>因为现在的 md 编写软件基本都可以直接粘贴图片到 md 文件里面,这个操作是十分方便的 但是各软件对图片的存放路径的处理各不相同,需要自己单独适配</p></div><p>因为架构直接拿的静默的,图片存放形式我觉得也十分合理,就沿用下来了</p><p>文档中的所有的图片都存放在<code>.vuepress/public/images/#模块名称#/xxx.png</code></p><ul><li><p>MarkText(仓库两年没更新了) 这个是我现在用的,在首选项中可以配置粘贴的图片存放位置,粘贴的时候直接生成到目标存放位置,并且 md 中显示的直接就是相对路径,所以即便是打包后也是正常显示的,麻烦的点在,每写一个模块都得重新设置首选项图片的存放路径</p></li><li><p>Obsidian 这个只是简单使用了下,也是支持直接粘贴图片,但是图片存放路径不好管理,即使设置了图片存放位置,图片在 md 文件中的显示也不是对应的相对位置</p></li><li><p>Typora 这个收费了就没用过了,@静默 的方式为在 yaml 中设置 typora-root-url 告诉这个 md 下的图片对应的相对路径,不过不清楚直接粘贴的图片是否会按照这个配置存放</p></li><li><p>VS-Code 插件-MarkdownImage 借助这个插件直接实现在 vscode 中编写 md 文件,因为 vuepress 搭建的,不时要写 vue 代码和配置,并且可以通过插件暴露的回调来自定义一些个性化操作</p></li></ul><h2 id="vscode-markdown-image-插件使用" tabindex="-1"><a class="header-anchor" href="#vscode-markdown-image-插件使用" aria-hidden="true">#</a> VScode Markdown Image 插件使用</h2><p>捣鼓了一下,发现可以 DIY 插件粘贴图片时的动作</p><ol><li><p>自定义保存文件的名称 <img src="'+l+'" alt="自定义保存文件的名称"></p></li><li><p>设置模式为自定义保存 <img src="'+u+'" alt="图 2"></p></li><li><p>设置配置文件路径 <img src="'+r+`" alt="图 3"></p></li><li><p>自定义粘贴图片动作</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 配置Vscode Markdown Image 插件 图片存放上传 */</span>
<span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;os&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs-extra&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> writeFile<span class="token punctuation">,</span> rename <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;node:fs/promises&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> imageRoot <span class="token operator">=</span>
	<span class="token string">&quot;D:\\\\git\\\\aeroxian.github.io\\\\docs\\\\.vuepress\\\\public\\\\images&quot;</span>
<span class="token keyword">const</span> logFilePath <span class="token operator">=</span> <span class="token string">&quot;D:/git/aeroxian.github.io/docs/.vuepress/log.txt&quot;</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">filePath<span class="token punctuation">,</span> savePath<span class="token punctuation">,</span> markdownPath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Return a picture access link</span>
	<span class="token keyword">const</span> dirNameList <span class="token operator">=</span> markdownPath<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\&quot;</span><span class="token punctuation">)</span>
	<span class="token comment">// 以md文件的上一级目录名字作为存放图片的文件夹名</span>
	<span class="token keyword">const</span> topDirName <span class="token operator">=</span> dirNameList<span class="token punctuation">[</span>dirNameList<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span>
	<span class="token keyword">const</span> newImgPath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>imageRoot<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\\\</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>topDirName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\\\</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>savePath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
	<span class="token comment">// path</span>
	<span class="token keyword">await</span> fse<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> newImgPath<span class="token punctuation">)</span>
	<span class="token comment">// 返回的是显示在md文件中图片的相对路径</span>
	<span class="token keyword">return</span> path
		<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>markdownPath<span class="token punctuation">)</span><span class="token punctuation">,</span> newImgPath<span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\\\</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 调试方法 写入log.txt文件</span>
<span class="token keyword">function</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// 这是一个promise</span>
	<span class="token comment">// os.EOL nodejs 换行符 flag:a+在原有内容追加</span>
	<span class="token keyword">const</span> str <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token constant">EOL</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token operator">...</span>args<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; | &quot;</span><span class="token punctuation">)</span>
	<span class="token function">writeFile</span><span class="token punctuation">(</span>logFilePath<span class="token punctuation">,</span> str<span class="token punctuation">,</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">flag</span><span class="token operator">:</span> <span class="token string">&quot;a+&quot;</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="squoosh-图片压缩" tabindex="-1"><a class="header-anchor" href="#squoosh-图片压缩" aria-hidden="true">#</a> Squoosh 图片压缩</h2>`,9),m={href:"https://squoosh.app/",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,"如： 2.59 MB 压缩成 186 KB",-1),h=n("h2",{id:"使用-github-图床",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用-github-图床","aria-hidden":"true"},"#"),s(" 使用 Github 图床")],-1),g=n("blockquote",null,[n("p",null,"背景： 考虑到 gitee 图床失效，cdn jsdelivr 不能访问，阿里云存储和流量收费以及日后图片迁移等的问题。决定还是使用 github 作为图床，将博客。毕竟我这是一个开源博客，并没有盈利，交给开源 github 管理，比较复合我的需求。"),n("p",null,"我的想法：能访问到博客就意味着能访问到图片，只不过有个图片加载速度问题。线上速度慢一点我能接收，因为看笔记的时候有 typora 作为辅助，其次可以考虑 jsdelivr CDN 加速方案。")],-1),b=n("p",null,"vuepress+typora。考虑到线上访问网站时能够显示图片，以及在本地编辑 typora 时方便预览图片。决定将这两个内容兼容起来。",-1),_=n("h2",{id:"参考",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),s(" 参考")],-1),f={href:"https://v2.vuepress.vuejs.org/zh/guide/assets.html#public-%E6%96%87%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"},w={href:"http://www.aqpower.cn/2022/08/18/VScode%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%BE%88%E5%A5%BD%E7%9A%84%E7%BC%96%E5%86%99markdown%E6%96%87%E4%BB%B6/",target:"_blank",rel:"noopener noreferrer"};function q(x,y){const a=p("ExternalLinkIcon");return o(),c("div",null,[d,n("p",null,[s("使用 Google 的在线版"),n("a",m,[s("Squoosh"),t(a)]),s(" 工具进行图片压缩")]),v,h,g,b,_,n("p",null,[n("a",f,[s("vuepress 静态资源-public"),t(a)]),n("a",w,[s("Vscode Markdown Image 插件使用"),t(a)])])])}const B=e(k,[["render",q],["__file","02 博客图片处理.html.vue"]]);export{B as default};
