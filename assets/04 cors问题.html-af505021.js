import{_ as i,M as l,p as u,q as r,N as a,V as e,R as n,t as s,a1 as o}from"./framework-f3fd2962.js";const k="/assets/image-20220926122703916-0764fad1.png",d="/assets/image-20220926154823739-f852e79e.png",m="/assets/image-20220926125820871-f0b5d105.png",g="/assets/image-20220926130314335-baae80f7.png",h="/assets/image-20220926131603859-93403110.png",v="/assets/image-20220926133921077-e212af0e.png",b="/assets/image-20220926133729516-8be3451b.png",f="/assets/image-20220926135217955-5092b0a4.png",_="/assets/preflight_correct-1f0273c8.png",q="/assets/image-20220926171001344-2508d499.png",x="/assets/image-20220926171706077-7e3f294d.png",w="/assets/image-20220926171834319-6d973802.png",A="/assets/image-20220926173206563-fcff317e.png",y="/assets/image-20220926175702008-f095f4d6.png",j="/assets/image-20220926180551648-e8a8d268.png",C={},T=o('<h2 id="cors" tabindex="-1"><a class="header-anchor" href="#cors" aria-hidden="true">#</a> CORS</h2><p>Cross-Origin Resource Sharing。是浏览器的行为，出于安全原因，浏览器限制从脚本发起的跨源HTTP请求，浏览器通过HTTP的HEADER来判断是否允许加载跨域的资源。</p><blockquote><p>出现跨域的根本原因：浏览器的同源策略不允许非同源的URL之间进行资源的交互</p></blockquote><p>一个跨域的例子，从<code>https://domain-a.com</code>的前端js代码请求<code>https://domain-b.com/data.json</code>提供的数据。</p><p><img src="'+k+'" alt="image-20220926122703916"></p><h3 id="浏览器对跨域请求的拦截" tabindex="-1"><a class="header-anchor" href="#浏览器对跨域请求的拦截" aria-hidden="true">#</a> 浏览器对跨域请求的拦截</h3><blockquote><p>浏览器允许发起跨域请求，但是，跨域请求回来的数据，会被浏览器拦截，无法被页面获取到!</p><p>这是针对简单请求的，如果是预检请求没有返回相应的cors请求头，那么真正的请求不会发送到服务端。</p></blockquote><p><img src="'+d+`" alt="image-20220926154823739"></p><h3 id="代码验证" tabindex="-1"><a class="header-anchor" href="#代码验证" aria-hidden="true">#</a> 代码验证</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>验证 1. cors问题的出现. 2.cors只发生在浏览器端</p></div><blockquote><p>为了方便快速实验cors机制，采用node+express来开发一个简单的web服务器</p></blockquote><p>服务端代码app.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">&quot;express&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;Aeroxian&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">9000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;server start at 9000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>客户端代码:</p><blockquote><p>文件说明，项目采用webpack管理，默认不配置webpack.打包的逻辑是src/index.js,打包后成立main.js</p></blockquote>`,15),O=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 前端脚本"),s(`
`),n("span",{class:"token keyword"},"import"),s(" axios "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"axios"'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"const"),s(" api "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"http://localhost:9000/test"'),s(`

axios`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),s("api"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"response"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("response"),n("span",{class:"token punctuation"},"."),s("data"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"catch"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"e"),s(),n("span",{class:"token operator"},"=>"),s(" console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"cors appear"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),H=n("div",{class:"language-html line-numbers-mode","data-ext":"html"},[n("pre",{class:"language-html"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("body")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("h2")]),n("span",{class:"token punctuation"},">")]),s("Cors 实验"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("h2")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),s(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("person"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
        Hello: `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("span")]),s(),n("span",{class:"token attr-name"},"id"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("name"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("span")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("script")]),s(),n("span",{class:"token attr-name"},"src"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("main.js"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"}),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("script")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("body")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),P=o('<p>浏览器中出现跨域请求<code>http://127.0.0.1:5500/dist/index.html</code>请求<code>http://localhost:9000/test</code>的资源,此时跨域问题出现了</p><p><img src="'+m+`" alt="image-20220926125820871"></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Access to XMLHttpRequest at <span class="token string">&#39;http://localhost:9000/test&#39;</span> from origin <span class="token string">&#39;http://127.0.0.1:5500&#39;</span>
has been blocked by CORS policy: No <span class="token string">&#39;Access-Control-Allow-Origin&#39;</span> header is present on the requested resource.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在index.js脚本当中,请求了不同源的资源.浏览器限制加载该资源.(可以看到api接口返回的是200,是可以调通的,但是浏览器限制了资源的加载)</p><p><img src="`+g+'" alt="image-20220926130314335"></p><blockquote><p>在node环境中执行前端的index.js脚本,可以看到有数据.</p></blockquote><p><img src="'+h+'" alt="image-20220926131603859"></p><h2 id="解决跨域-simple-request-❤️" tabindex="-1"><a class="header-anchor" href="#解决跨域-simple-request-❤️" aria-hidden="true">#</a> 解决跨域(Simple Request)❤️</h2><p>上面的请求资源是一个简单请求(Simple Request).对应的还有预检请求(Preflight request),如自己添加了HTTP header头部信息.</p>',9),E={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#simple_requests",target:"_blank",rel:"noopener noreferrer"},R=o('<blockquote><p>This operation performs a simple exchange between the client and the server, <strong>using CORS headers to handle the privileges</strong>:</p></blockquote><p><img src="'+v+'" alt="image-20220926133921077"></p><p>从浏览器中查看请求头,发现浏览器自动为我们添加请求头的Origin.要解决cors跨域问题,只需要我们在服务端添加相应的响应头<code>Access-Control-Allow-Origin</code>即可</p><p><img src="'+b+`" alt="image-20220926133729516"></p><p>在服务端(app.js)添加响应头<code>Access-Control-Allow-Origin</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">&quot;express&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;get req&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// add Access-Control-Allow-Origin header</span>
    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span>
    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;Aeroxian&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">9000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;server start at 9000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+f+'" alt="image-20220926135217955"></p><h2 id="preflight-request⭐" tabindex="-1"><a class="header-anchor" href="#preflight-request⭐" aria-hidden="true">#</a> Preflight request⭐</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>与简单请求相比，浏览器自己多发送了一个请求</p></div>',9),S={href:"https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request",target:"_blank",rel:"noopener noreferrer"},N=n("blockquote",null,[n("p",null,"浏览器在发现页面发出的请求非简单请求，并不会立即执行对应的请求代码，而是会触发预先请求模式。预先请求模式会先发送preflight request（预先验证请求），preflight request是一个OPTION请求，用于询问要被跨域访问的服务器，是否允许当前域名下的页面发送跨域的请求。在得到服务器的跨域授权后才能发送真正的HTTP请求。")],-1),I={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/OPTIONS",target:"_blank",rel:"noopener noreferrer"},z=n("code",null,"OPTIONS",-1),M={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method",target:"_blank",rel:"noopener noreferrer"},B=n("code",null,"Access-Control-Request-Method",-1),D={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers",target:"_blank",rel:"noopener noreferrer"},U=n("code",null,"Access-Control-Request-Headers",-1),W={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin",target:"_blank",rel:"noopener noreferrer"},G=n("code",null,"Origin",-1),L=o('<ol><li>如下面的案例自己添加了一个X-PINGOTHER的头部信息，在跨域的情况下会先发送预检请求</li><li>然后再发送正真的请求</li></ol><p><img src="'+_+'" alt="img"></p><h3 id="代码验证❤️" tabindex="-1"><a class="header-anchor" href="#代码验证❤️" aria-hidden="true">#</a> 代码验证❤️</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>通过自定义头部信息，来发送跨域请求，观察preflight request</p></div>',4),V=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(" express "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"express"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" app "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"express"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/test"'),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("req"),n("span",{class:"token punctuation"},","),s("res")]),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"=>"),n("span",{class:"token punctuation"},"{"),s(`
    console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"get req"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    res`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"json"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),n("span",{class:"token string"},"'Aeroxian'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"// 添加一个options方法，来观察"),s(`
app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"options"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/test"'),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("req"),n("span",{class:"token punctuation"},","),s("res")]),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"=>"),n("span",{class:"token punctuation"},"{"),s(`
    console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Preflight Appear"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    res`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"send"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"finished:)"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`

app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"listen"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"9000"),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"=>"),n("span",{class:"token punctuation"},"{"),s(`
    console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"server start at 9000"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),X=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 前端脚本"),s(`
`),n("span",{class:"token keyword"},"import"),s(" axios "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"axios"'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"const"),s(" api "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"http://localhost:9000/test"'),s(`
`),n("span",{class:"token keyword"},"const"),s(" nameEl "),n("span",{class:"token operator"},"="),s(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getElementById"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// 自定义了一个header"),s(`
`),n("span",{class:"token keyword"},"const"),s(" config "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"headers"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token string-property property"},"'auth-token'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'aeroxian-token'"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

axios`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),s("api"),n("span",{class:"token punctuation"},","),s("config"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"response"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("response"),n("span",{class:"token punctuation"},"."),s("data"),n("span",{class:"token punctuation"},")"),s(`
    nameEl`),n("span",{class:"token punctuation"},"."),s("textContent "),n("span",{class:"token operator"},"="),s(" response"),n("span",{class:"token punctuation"},"."),s("data"),n("span",{class:"token punctuation"},"."),s(`name
    nameEl`),n("span",{class:"token punctuation"},"."),s("className "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"success"'),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"catch"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"e"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"cors appear"'),n("span",{class:"token punctuation"},")"),s(`
    nameEl`),n("span",{class:"token punctuation"},"."),s("className "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"errors"'),s(`
    nameEl`),n("span",{class:"token punctuation"},"."),s("textContent "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"Cors Appear"'),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),F=o(`<p>浏览器在发送真正的请求之前（<code>http://localhost:9000/test</code>）先发送了一个请求方法为options的请求。预检请求没有返回相应的cors策略，导致跨域问题出现，真正的请求并没有发送。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Access to XMLHttpRequest at <span class="token string">&#39;http://localhost:9000/test&#39;</span> from origin <span class="token string">&#39;http://127.0.0.1:5500&#39;</span> 
has been blocked by CORS policy: Response to preflight request doesn<span class="token punctuation">\\</span>&#39;t pass access control check: No <span class="token string">&#39;Access-Control-Allow-Origin&#39;</span> header is present on the requested resource.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+q+'" alt="image-20220926171001344"></p><p><img src="'+x+'" alt="image-20220926171706077"></p><p>预检查请求是一个options方法</p><p><img src="'+w+`" alt="image-20220926171834319"></p><h3 id="解决跨域" tabindex="-1"><a class="header-anchor" href="#解决跨域" aria-hidden="true">#</a> 解决跨域</h3><blockquote><p>只需要更改服务端的预检请求即可。app.js</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">&quot;express&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;get req&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;Aeroxian&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 添加一个options方法，来观察</span>
app<span class="token punctuation">.</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Preflight Appear&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 添加允许的跨域的策略</span>
    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 允许所有来源</span>
    <span class="token comment">// 由于自定义了头部，需要指定允许跨域指定的头部</span>
    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Headers&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;auth-token&quot;</span><span class="token punctuation">)</span>
    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&quot;finished:)&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">9000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;server start at 9000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+A+'" alt="image-20220926173206563"></p><h3 id="express提供cors中间件" tabindex="-1"><a class="header-anchor" href="#express提供cors中间件" aria-hidden="true">#</a> express提供cors中间件</h3>',11),J={class:"custom-container tip"},K=n("p",{class:"custom-container-title"},"TIP",-1),Q={href:"http://expressjs.com/en/resources/middleware/cors.html",target:"_blank",rel:"noopener noreferrer"},Y=n("p",null,"express提供了cors中间件，专门解决express中跨域的问题，使得我们专注业务开发，不再关注处理跨域的问题。",-1),Z=o(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> cors
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),$=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(" express "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"express"'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(" cors "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'cors'"),s(`

`),n("span",{class:"token keyword"},"const"),s(" app "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"express"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"// 使用cors中间件"),s(`
app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"cors"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/test"'),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("req"),n("span",{class:"token punctuation"},","),s("res")]),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"=>"),n("span",{class:"token punctuation"},"{"),s(`
    console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"get req"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    res`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"json"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),n("span",{class:"token string"},"'Aeroxian'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`

app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"listen"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"9000"),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"=>"),n("span",{class:"token punctuation"},"{"),s(`
    console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"server start at 9000"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),nn=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(" express "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"express"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" app "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"express"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/test"'),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("req"),n("span",{class:"token punctuation"},","),s("res")]),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"=>"),n("span",{class:"token punctuation"},"{"),s(`
    console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"get req"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    res`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"json"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),n("span",{class:"token string"},"'Aeroxian'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"// 添加一个options方法，来观察"),s(`
app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"options"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/test"'),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("req"),n("span",{class:"token punctuation"},","),s("res")]),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"=>"),n("span",{class:"token punctuation"},"{"),s(`
    console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Preflight Appear"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// 添加允许的跨域的策略"),s(`
    res`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setHeader"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Access-Control-Allow-Origin"'),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},'"*"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 允许所有来源"),s(`
    `),n("span",{class:"token comment"},"// 由于自定义了头部，需要指定允许跨域指定的头部"),s(`
    res`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setHeader"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Access-Control-Allow-Headers"'),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},'"auth-token"'),n("span",{class:"token punctuation"},")"),s(`
    res`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"send"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"finished:)"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`

app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"listen"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"9000"),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"=>"),n("span",{class:"token punctuation"},"{"),s(`
    console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"server start at 9000"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),sn=n("h2",{id:"cors相关header说明",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#cors相关header说明","aria-hidden":"true"},"#"),s(" cors相关header说明")],-1),an=n("h3",{id:"响应首部字段",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#响应首部字段","aria-hidden":"true"},"#"),s(" 响应首部字段")],-1),tn={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS#http_%E5%93%8D%E5%BA%94%E9%A6%96%E9%83%A8%E5%AD%97%E6%AE%B5",target:"_blank",rel:"noopener noreferrer"},en=o(`<h4 id="access-control-allow-origin" tabindex="-1"><a class="header-anchor" href="#access-control-allow-origin" aria-hidden="true">#</a> Access-Control-Allow-Origin</h4><blockquote><p>顾名思义,访问控制允许的源,主要在server端设置响应的header</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// means that the resource can be accessed by any origin</span>
Access<span class="token operator">-</span>Control<span class="token operator">-</span>Allow<span class="token operator">-</span>Origin<span class="token operator">:</span> <span class="token operator">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>If the resource owners at https://bar.other wished to restrict access to the resource to requests only from https://foo.example (i.e., no domain other than https://foo.example can access the resource in a cross-origin manner), they would send</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 严格限制</span>
Access<span class="token operator">-</span>Control<span class="token operator">-</span>Allow<span class="token operator">-</span>Origin<span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>foo<span class="token punctuation">.</span>example
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="access-control-allow-methods" tabindex="-1"><a class="header-anchor" href="#access-control-allow-methods" aria-hidden="true">#</a> Access-Control-Allow-Methods</h4><p>首部字段用于预检请求的响应。其指明了实际请求所允许使用的 HTTP 方法。</p><h4 id="access-control-allow-headers" tabindex="-1"><a class="header-anchor" href="#access-control-allow-headers" aria-hidden="true">#</a> Access-Control-Allow-Headers</h4><p>首部字段用于预检请求的响应。其指明了实际请求中允许携带的首部字段</p><h3 id="请求首部字段" tabindex="-1"><a class="header-anchor" href="#请求首部字段" aria-hidden="true">#</a> 请求首部字段</h3>`,11),on={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS#http_%E8%AF%B7%E6%B1%82%E9%A6%96%E9%83%A8%E5%AD%97%E6%AE%B5",target:"_blank",rel:"noopener noreferrer"},pn=o('<h4 id="origin" tabindex="-1"><a class="header-anchor" href="#origin" aria-hidden="true">#</a> Origin</h4><p>首部字段表明预检请求或实际请求的源站。</p><h4 id="access-control-request-headers" tabindex="-1"><a class="header-anchor" href="#access-control-request-headers" aria-hidden="true">#</a> Access-Control-Request-Headers</h4><p>首部字段用于预检请求。其作用是，将实际请求所携带的首部字段告诉服务器。</p><h2 id="跨域问题出现的领域" tabindex="-1"><a class="header-anchor" href="#跨域问题出现的领域" aria-hidden="true">#</a> 跨域问题出现的领域</h2><p>跨域问题只出现在浏览器端发送的请求。如果是后端发送的请求（如node运行js,或者使用postman测试，则不会出现跨域）</p><p>但是如果是在浏览器，开发插件的话并不会出现跨域的问题。</p><h2 id="使用插件自动添加" tabindex="-1"><a class="header-anchor" href="#使用插件自动添加" aria-hidden="true">#</a> 使用插件自动添加</h2>',8),cn={class:"custom-container tip"},ln=n("p",{class:"custom-container-title"},"TIP",-1),un={href:"https://microsoftedge.microsoft.com/addons/detail/cors-unblock/hkjklmhkbkdhlgnnfbbcihcajofmjgbh?hl=zh-CN",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://add0n.com/access-control.html?version=0.3.4&type=install",target:"_blank",rel:"noopener noreferrer"},kn=n("p",null,[n("img",{src:y,alt:"image-20220926175702008"})],-1),dn=n("p",null,"该插件会自动添加响应的信息，方便开发测试。",-1),mn=n("p",null,[n("img",{src:j,alt:"image-20220926180551648"})],-1),gn=n("p",null,"值得注意的是，如果预检请求，尽管返回了响应的cors头部信息，但是如果返回的是不是2xx状态，比如401,那么还是会有跨域的问题。所以该插件尽管添加了这些信息，问题仍然出现。",-1);function hn(vn,bn){const p=l("CodeGroupItem"),c=l("CodeGroup"),t=l("ExternalLinkIcon");return u(),r("div",null,[T,a(c,null,{default:e(()=>[a(p,{title:"index.js"},{default:e(()=>[O]),_:1}),a(p,{title:"index.html"},{default:e(()=>[H]),_:1})]),_:1}),P,n("p",null,[s("根据"),n("a",E,[s("Cross-Origin Resource Sharing (CORS) - HTTP | MDN (mozilla.org)"),a(t)]),s("提供的解决方案")]),R,n("p",null,[n("a",S,[s("Preflight request - MDN Web Docs Glossary: Definitions of Web-related terms | MDN (mozilla.org)"),a(t)])]),N,n("p",null,[s("It is an "),n("a",I,[z,a(t)]),s(" request, using three HTTP request headers: "),n("a",M,[B,a(t)]),s(", "),n("a",D,[U,a(t)]),s(", and the "),n("a",W,[G,a(t)]),s(" header.")]),L,a(c,null,{default:e(()=>[a(p,{title:"服务端app.js"},{default:e(()=>[V]),_:1}),a(p,{title:"浏览器脚本 index.js"},{default:e(()=>[X]),_:1})]),_:1}),F,n("div",J,[K,n("p",null,[n("a",Q,[s("Express cors middleware (expressjs.com)"),a(t)])]),Y]),Z,a(c,null,{default:e(()=>[a(p,{title:"使用cors"},{default:e(()=>[$]),_:1}),a(p,{title:"没有使用cors"},{default:e(()=>[nn]),_:1})]),_:1}),sn,an,n("p",null,[n("a",tn,[s("跨源资源共享（CORS）- 响应首部字段"),a(t)])]),en,n("p",null,[n("a",on,[s("跨源资源共享（CORS） - 请求首部字段"),a(t)])]),pn,n("div",cn,[ln,n("p",null,[n("a",un,[s("CORS Unblock - Microsoft Edge 插件下载地址"),a(t)])]),n("p",null,[n("a",rn,[s("Access Control-Allow-Origin - Unblock :: 该插件首页"),a(t)])])]),kn,dn,mn,gn])}const _n=i(C,[["render",hn],["__file","04 cors问题.html.vue"]]);export{_n as default};
