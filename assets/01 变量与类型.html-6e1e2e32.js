import{_ as a,p as n,q as s,a1 as e}from"./framework-f3fd2962.js";const i={},t=e(`<h2 id="_1-类型" tabindex="-1"><a class="header-anchor" href="#_1-类型" aria-hidden="true">#</a> 1 类型</h2><h3 id="_1-1-基本类型" tabindex="-1"><a class="header-anchor" href="#_1-1-基本类型" aria-hidden="true">#</a> 1.1 基本类型</h3><h4 id="_1-1-1-number-数字-整数-小数-负数" tabindex="-1"><a class="header-anchor" href="#_1-1-1-number-数字-整数-小数-负数" aria-hidden="true">#</a> 1.1.1 number 数字 整数 小数 负数</h4><h4 id="_1-1-2-string-字符串" tabindex="-1"><a class="header-anchor" href="#_1-1-2-string-字符串" aria-hidden="true">#</a> 1.1.2 string 字符串</h4><h4 id="_1-1-3-boolean-布尔值" tabindex="-1"><a class="header-anchor" href="#_1-1-3-boolean-布尔值" aria-hidden="true">#</a> 1.1.3 boolean 布尔值</h4><h4 id="_1-1-4-undefined-未赋值" tabindex="-1"><a class="header-anchor" href="#_1-1-4-undefined-未赋值" aria-hidden="true">#</a> 1.1.4 undefined 未赋值</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>a <span class="token operator">=</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token comment">// 也就是 a = undefined</span>

<span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">===</span> <span class="token keyword">undefined</span>  <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-1-5-null-空引用" tabindex="-1"><a class="header-anchor" href="#_1-1-5-null-空引用" aria-hidden="true">#</a> 1.1.5 null 空引用</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> language <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> language<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// object</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-1-6-symbol-es6" tabindex="-1"><a class="header-anchor" href="#_1-1-6-symbol-es6" aria-hidden="true">#</a> 1.1.6 Symbol(ES6)</h4><h3 id="_1-2-检测类型typeof" tabindex="-1"><a class="header-anchor" href="#_1-2-检测类型typeof" aria-hidden="true">#</a> 1.2 检测类型typeof</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 表达式</span>
<span class="token keyword">typeof</span> variable
<span class="token comment">// 函数</span>
<span class="token keyword">typeof</span><span class="token punctuation">(</span>variable<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-2-1-typeof-nan" tabindex="-1"><a class="header-anchor" href="#_1-2-1-typeof-nan" aria-hidden="true">#</a> 1.2.1 typeof(NaN)</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span> <span class="token comment">// number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-3-instanceof" tabindex="-1"><a class="header-anchor" href="#_1-3-instanceof" aria-hidden="true">#</a> 1.3 instanceof</h3><h4 id="_1-3-1-是否是数组类型" tabindex="-1"><a class="header-anchor" href="#_1-3-1-是否是数组类型" aria-hidden="true">#</a> 1.3.1 是否是数组类型</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>variable <span class="token keyword">instanceof</span> <span class="token class-name">Array</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-4-比较" tabindex="-1"><a class="header-anchor" href="#_1-4-比较" aria-hidden="true">#</a> 1.4 比较</h3><h4 id="_1-4-1-不严格等于" tabindex="-1"><a class="header-anchor" href="#_1-4-1-不严格等于" aria-hidden="true">#</a> 1.4.1 == 不严格等于</h4><ol><li>只要内容相同即可</li><li>类型不要求</li></ol><h4 id="_1-4-2-严格等于" tabindex="-1"><a class="header-anchor" href="#_1-4-2-严格等于" aria-hidden="true">#</a> 1.4.2 === 严格等于</h4><ol><li>内容和类型都必须一样</li></ol><h3 id="_1-5-类型转换" tabindex="-1"><a class="header-anchor" href="#_1-5-类型转换" aria-hidden="true">#</a> 1.5 类型转换</h3><h4 id="_1-5-1-字符串转数字" tabindex="-1"><a class="header-anchor" href="#_1-5-1-字符串转数字" aria-hidden="true">#</a> 1.5.1 字符串转数字</h4><h5 id="_1-parseint-转为正数" tabindex="-1"><a class="header-anchor" href="#_1-parseint-转为正数" aria-hidden="true">#</a> 1 parseInt 转为正数</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 会去掉a</span>
<span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&quot;20a&quot;</span><span class="token punctuation">)</span> <span class="token comment">// = 20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-number-可以能转化为浮点数" tabindex="-1"><a class="header-anchor" href="#_2-number-可以能转化为浮点数" aria-hidden="true">#</a> 2 Number 可以能转化为浮点数</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">&quot;20a&quot;</span><span class="token punctuation">)</span> <span class="token comment">// NaN</span>
<span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">&quot;20&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-parsefloat" tabindex="-1"><a class="header-anchor" href="#_3-parsefloat" aria-hidden="true">#</a> 3 parseFloat</h5><h4 id="_1-5-2-转字符串" tabindex="-1"><a class="header-anchor" href="#_1-5-2-转字符串" aria-hidden="true">#</a> 1.5.2 转字符串</h4><h5 id="_1-tostring" tabindex="-1"><a class="header-anchor" href="#_1-tostring" aria-hidden="true">#</a> 1 toString()</h5><h6 id="转换成二进制" tabindex="-1"><a class="header-anchor" href="#转换成二进制" aria-hidden="true">#</a> 转换成二进制</h6><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token boolean">true</span>
a<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;true&quot;</span>
<span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 转换成二进制</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">3</span>
a<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// &quot;11&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-string" tabindex="-1"><a class="header-anchor" href="#_2-string" aria-hidden="true">#</a> 2 String</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">String</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// &quot;true&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2常用内置方法" tabindex="-1"><a class="header-anchor" href="#_2常用内置方法" aria-hidden="true">#</a> 2常用内置方法</h2><h3 id="_2-1-isnan" tabindex="-1"><a class="header-anchor" href="#_2-1-isnan" aria-hidden="true">#</a> 2.1 isNaN</h3><h3 id="_2-2-object-is比较" tabindex="-1"><a class="header-anchor" href="#_2-2-object-is比较" aria-hidden="true">#</a> 2.2 Object.is比较</h3><h4 id="_2-2-1-nan比较" tabindex="-1"><a class="header-anchor" href="#_2-2-1-nan比较" aria-hidden="true">#</a> 2.2.1 NaN比较</h4><h5 id="_1-比较" tabindex="-1"><a class="header-anchor" href="#_1-比较" aria-hidden="true">#</a> 1 ===比较</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">NaN</span> <span class="token operator">===</span> <span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="_2-object-is比较" tabindex="-1"><a class="header-anchor" href="#_2-object-is比较" aria-hidden="true">#</a> 2 Object.is比较</h5><div class="language-jss line-numbers-mode" data-ext="jss"><pre class="language-jss"><code>console.log(Object.is(NaN, NaN)); // true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-逻辑运算符" tabindex="-1"><a class="header-anchor" href="#_3-逻辑运算符" aria-hidden="true">#</a> 3 逻辑运算符</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token number">4</span> <span class="token comment">// a = 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-object常用方法" tabindex="-1"><a class="header-anchor" href="#_4-object常用方法" aria-hidden="true">#</a> 4 Object常用方法</h2><h3 id="_4-1-object-keys" tabindex="-1"><a class="header-anchor" href="#_4-1-object-keys" aria-hidden="true">#</a> 4.1 Object.keys</h3><h3 id="_4-2-object-is" tabindex="-1"><a class="header-anchor" href="#_4-2-object-is" aria-hidden="true">#</a> 4.2 Object.is</h3>`,48),r=[t];function d(c,o){return n(),s("div",null,r)}const p=a(i,[["render",d],["__file","01 变量与类型.html.vue"]]);export{p as default};
