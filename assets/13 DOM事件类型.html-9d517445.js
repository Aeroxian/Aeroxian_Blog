import{_ as a,p as s,q as e,a1 as n,R as t}from"./framework-f3fd2962.js";const o={},i=n(`<h2 id="_1-window事件" tabindex="-1"><a class="header-anchor" href="#_1-window事件" aria-hidden="true">#</a> 1 window事件</h2><h3 id="_1-1-load" tabindex="-1"><a class="header-anchor" href="#_1-1-load" aria-hidden="true">#</a> 1.1 load</h3><h3 id="_1-2-hashchange" tabindex="-1"><a class="header-anchor" href="#_1-2-hashchange" aria-hidden="true">#</a> 1.2 hashchange</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function-variable function">onhashchange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vm<span class="token punctuation">.</span>current <span class="token operator">=</span> location<span class="token punctuation">.</span>hash<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// home</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-domcontentloaded" tabindex="-1"><a class="header-anchor" href="#_1-3-domcontentloaded" aria-hidden="true">#</a> 1.3 DOMContentLoaded</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;DOMContentLoaded&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
	<span class="token comment">//	加载数据</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>DOMContentLoaded</code> event will fire as soon as the DOM hierarchy has been fully constructed, the <code>load</code> event will do it when all the images and sub-frames have finished loading.</p><hr><h2 id="_2-鼠标事件" tabindex="-1"><a class="header-anchor" href="#_2-鼠标事件" aria-hidden="true">#</a> 2 鼠标事件</h2><h3 id="_2-1-mouseover与mouseout" tabindex="-1"><a class="header-anchor" href="#_2-1-mouseover与mouseout" aria-hidden="true">#</a> 2.1 mouseover与mouseout</h3><ol><li>父元素进入子元素时父元素绑定的事件会被触发</li></ol><h3 id="_2-2-mouseenter与mouseleave" tabindex="-1"><a class="header-anchor" href="#_2-2-mouseenter与mouseleave" aria-hidden="true">#</a> 2.2 mouseenter与mouseleave</h3><h3 id="_2-3-mousemove" tabindex="-1"><a class="header-anchor" href="#_2-3-mousemove" aria-hidden="true">#</a> 2.3 mousemove</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Event Handler</span>
<span class="token keyword">function</span> <span class="token function">runEvent</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">EVENT TYPE: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token punctuation">.</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  heading<span class="token punctuation">.</span>textContent<span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">MouseX: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token punctuation">.</span>offsetX<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> MouseY: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token punctuation">.</span>offsetY<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token comment">//	改变背景色	</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">rgb(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token punctuation">.</span>offsetX<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token punctuation">.</span>offsetY<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, 40)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-contextmenu" tabindex="-1"><a class="header-anchor" href="#_2-4-contextmenu" aria-hidden="true">#</a> 2.4 contextmenu</h3><p>右键菜单显示</p><h3 id="_2-5-selectstart" tabindex="-1"><a class="header-anchor" href="#_2-5-selectstart" aria-hidden="true">#</a> 2.5 selectstart</h3><p>选中文本</p><h3 id="_2-6-mousedown" tabindex="-1"><a class="header-anchor" href="#_2-6-mousedown" aria-hidden="true">#</a> 2.6 mousedown</h3><h3 id="_2-7-mouseup" tabindex="-1"><a class="header-anchor" href="#_2-7-mouseup" aria-hidden="true">#</a> 2.7 mouseup</h3><h3 id="_2-8-click" tabindex="-1"><a class="header-anchor" href="#_2-8-click" aria-hidden="true">#</a> 2.8 click</h3><h3 id="_2-9-dblclick" tabindex="-1"><a class="header-anchor" href="#_2-9-dblclick" aria-hidden="true">#</a> 2.9 dblclick</h3><hr><h2 id="_3-表单相关事件" tabindex="-1"><a class="header-anchor" href="#_3-表单相关事件" aria-hidden="true">#</a> 3 表单相关事件</h2><h3 id="_3-1-keypress" tabindex="-1"><a class="header-anchor" href="#_3-1-keypress" aria-hidden="true">#</a> 3.1 keypress</h3><h3 id="_3-2-keyup" tabindex="-1"><a class="header-anchor" href="#_3-2-keyup" aria-hidden="true">#</a> 3.2 keyup</h3><h4 id="_3-2-1-模拟事件触发" tabindex="-1"><a class="header-anchor" href="#_3-2-1-模拟事件触发" aria-hidden="true">#</a> 3.2.1 模拟事件触发</h4><p>可以直接调用事件方法</p><h5 id="_1-玩法-s键触发自动聚焦" tabindex="-1"><a class="header-anchor" href="#_1-玩法-s键触发自动聚焦" aria-hidden="true">#</a> 1 玩法：s键触发自动聚焦</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 给document绑定键盘事件</span>
document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;keyup&quot;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token string">&#39;s&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 调用input.focus方法 </span>
        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;search&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_3-3-keydown" tabindex="-1"><a class="header-anchor" href="#_3-3-keydown" aria-hidden="true">#</a> 3.3 keydown</h3><h3 id="_3-4-cut-剪切" tabindex="-1"><a class="header-anchor" href="#_3-4-cut-剪切" aria-hidden="true">#</a> 3.4 cut 剪切</h3><h3 id="_3-5-paste-粘贴" tabindex="-1"><a class="header-anchor" href="#_3-5-paste-粘贴" aria-hidden="true">#</a> 3.5 paste 粘贴</h3><h3 id="_3-6-input-监听内容输入" tabindex="-1"><a class="header-anchor" href="#_3-6-input-监听内容输入" aria-hidden="true">#</a> 3.6 input 监听内容输入</h3><h4 id="_3-6-1-input输入框实时监测" tabindex="-1"><a class="header-anchor" href="#_3-6-1-input输入框实时监测" aria-hidden="true">#</a> 3.6.1 input输入框实时监测</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 获取input输入框</span>
<span class="token keyword">let</span> username <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span>
username<span class="token punctuation">.</span><span class="token function-variable function">oninput</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;你正在输入：&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**
你正在输入： h
你正在输入： he
你正在输入： hel
你正在输入： hell
你正在输入： hello
你正在输入： hellow
你正在输入： hellowo
你正在输入： hellowor
你正在输入： helloworl
你正在输入： helloworld
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-6-2-输入提示框⭐⭐" tabindex="-1"><a class="header-anchor" href="#_3-6-2-输入提示框⭐⭐" aria-hidden="true">#</a> 3.6.2 输入提示框⭐⭐</h4><ol><li>边框transparent</li><li>旋转</li><li>after的伪元素的相对定位</li><li>相关事件的监听处理</li></ol>`,39),p=t("iframe",{height:"409",style:{width:"100%"},scrolling:"no",title:"Input Arrow prompt",src:"https://codepen.io/Aeroxian/embed/RwRaRvR?height=409&theme-id=dark&default-tab=css,result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/Aeroxian/pen/RwRaRvR'>Input Arrow prompt</a> by 黄壮壮
  (<a href='https://codepen.io/Aeroxian'>@Aeroxian</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),c=n(`<h3 id="_3-7-change" tabindex="-1"><a class="header-anchor" href="#_3-7-change" aria-hidden="true">#</a> 3.7 change</h3><h4 id="_3-7-1-主要是针对value的改变" tabindex="-1"><a class="header-anchor" href="#_3-7-1-主要是针对value的改变" aria-hidden="true">#</a> 3.7.1 主要是针对value的改变</h4><h5 id="如-select-radio" tabindex="-1"><a class="header-anchor" href="#如-select-radio" aria-hidden="true">#</a> 如：select,radio</h5><p>1 select元素的值改变时</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> selectEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;city&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 添加事件</span>
selectEl<span class="token punctuation">.</span><span class="token function-variable function">onchange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onchange事件&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-8-focus" tabindex="-1"><a class="header-anchor" href="#_3-8-focus" aria-hidden="true">#</a> 3.8 focus</h3><h3 id="_3-9-blur" tabindex="-1"><a class="header-anchor" href="#_3-9-blur" aria-hidden="true">#</a> 3.9 blur</h3><h3 id="_3-10-submit" tabindex="-1"><a class="header-anchor" href="#_3-10-submit" aria-hidden="true">#</a> 3.10 submit</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>form<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;submit&#39;</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9),l=[i,p,c];function u(r,d){return s(),e("div",null,l)}const k=a(o,[["render",u],["__file","13 DOM事件类型.html.vue"]]);export{k as default};
