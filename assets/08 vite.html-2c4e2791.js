import{_ as l,M as o,p as u,q as d,N as a,V as p,R as n,t as s,a1 as t}from"./framework-f3fd2962.js";const r="/assets/image-20220928124855584-485a78a5.png",k="/assets/image-20220928125145177-75260e07.png",v="/assets/image-20220928135336799-81fc09c8.png",m={},b=n("div",{class:"custom-container tip"},[n("p",{class:"custom-container-title"},"TIP"),n("p",null,"前端非常好的开箱即用的工具")],-1),g=n("h2",{id:"背景",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#背景","aria-hidden":"true"},"#"),s(" 背景")],-1),h=n("p",null,"在默认情况下, 我们的esmodule去导入资源的时候, 要么是绝对路径, 要么是相对路径",-1),_=n("div",{class:"language-html line-numbers-mode","data-ext":"html"},[n("pre",{class:"language-html"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("body")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("script")]),s(),n("span",{class:"token attr-name"},"src"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("./app.js"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"type"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("module"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"}),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("script")]),n("span",{class:"token punctuation"},">")]),s(`
 `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("body")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token string"},'"./count.js"'),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),q=t('<p>浏览器实现了esmodule，能够支持导入<code>count.js</code></p><p><img src="'+r+`" alt="image-20220928124855584"></p><p>如果我们像这样导入，浏览器esmodule则不会去node_modules查找</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&quot;./count.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> _ <span class="token keyword">from</span> <span class="token string">&quot;lodash&quot;</span><span class="token punctuation">;</span>  <span class="token comment">// 浏览器不会去node_modules中找lodash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+k+`" alt="image-20220928125145177"></p><blockquote><p>既然我们现在的最佳实践就是node_modules, 那为什么es官方在我们导入非绝对路径和非相对路径的资源的时候不默认帮我们 搜寻node_modules呢？假设浏览器做了这个事情，那么会导致性能下降，因为依赖也可能引入更多的import。会形成一个关系网图。</p></blockquote><h2 id="使用vite❤️" tabindex="-1"><a class="header-anchor" href="#使用vite❤️" aria-hidden="true">#</a> 使用vite❤️</h2><p>在上面的项目中我们安装vite,开箱即用</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> vite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置一下<code>package.json</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">,</span> 
    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite build&quot;</span><span class="token punctuation">,</span> 
    <span class="token property">&quot;preview&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite preview&quot;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行可以看到，解决我们项目中引入<code>lodash</code>的问题。原因时，vite对路径进行了处理。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 源码</span>
<span class="token keyword">import</span> <span class="token string">&quot;./count.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> _ <span class="token keyword">from</span> <span class="token string">&quot;lodash&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// vite处理成</span>
<span class="token keyword">import</span> <span class="token string">&quot;/count.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> __vite__cjsImport1_lodash <span class="token keyword">from</span> <span class="token string">&quot;/node_modules/.vite/deps/lodash.js?v=b4eb8a8a&quot;</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="依赖预构建" tabindex="-1"><a class="header-anchor" href="#依赖预构建" aria-hidden="true">#</a> 依赖预构建</h2>`,14),j={href:"https://vitejs.dev/guide/dep-pre-bundling.html",target:"_blank",rel:"noopener noreferrer"},y=t(`<ol><li><p>兼容CommonJs和UMD，vite会将他们转换成 ESM（esmodule）</p></li><li><p>提高性能：Vite converts ESM dependencies with many internal modules into a single module to improve subsequent page load performance。将许多模块变成一个文件，减少网络请求（官网举了一个lodash-es的例子）</p></li></ol><p>比如我们配置<code>vite.config.js</code>,不对lodash-es进行预构建。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">optimizeDeps</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;lodash-es&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到发送了很多http请求加载模块</p><p><img src="`+v+'" alt="image-20220928135336799"></p><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h2><h2 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量" aria-hidden="true">#</a> 环境变量</h2>',7),w={href:"https://vitejs.dev/guide/env-and-mode.html#env-variables-and-modes",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.bilibili.com/video/BV1GN4y1M7P5?p=8&vd_source=83b77a4d29913d39a25316cf0ee47e54",target:"_blank",rel:"noopener noreferrer"},V=t("<p>代码环境:</p><ol><li>开发环境</li><li>测试环境</li><li>预发布环境</li><li>灰度环境</li><li>生产环境</li></ol><blockquote><p>vite使用dotenv这个第三方库来读取<code>.env</code>文件，并解析，最后挂在到<code>process</code>对象上。（process是node中的）</p></blockquote>",3),C={href:"https://vitejs.dev/config/#environment-variables",target:"_blank",rel:"noopener noreferrer"},E=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig<span class="token punctuation">,</span> loadEnv <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> command<span class="token punctuation">,</span> mode <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;mode///&quot;</span><span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;p<wbr>rocess.env///&quot;</span><span class="token punctuation">,</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_NAME</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 拿不到</span>

  <span class="token comment">// Load env file based on \`mode\` in the current working directory.</span>
  <span class="token comment">// Set the third parameter to &#39;&#39; to load all env regardless of the \`VITE_\` prefix.</span>
  <span class="token comment">// 会加载当前项目路径下的.env.[model]文件</span>
  <span class="token keyword">const</span> env <span class="token operator">=</span> <span class="token function">loadEnv</span><span class="token punctuation">(</span>mode<span class="token punctuation">,</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;env///&quot;</span><span class="token punctuation">,</span> env<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Vite 在一个特殊的 <strong><code>i<wbr>mport.meta.env</code></strong> 对象上暴露环境变量。</p><h2 id="css处理" tabindex="-1"><a class="header-anchor" href="#css处理" aria-hidden="true">#</a> css处理</h2><blockquote><p>Vite处理css的原理</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;index.css&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>vite处理css模块化module</p><h3 id="js语法学习" tabindex="-1"><a class="header-anchor" href="#js语法学习" aria-hidden="true">#</a> js语法学习</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// a.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// </span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> <span class="token keyword">default</span> <span class="token keyword">as</span> a<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./a.js&quot;</span>
<span class="token comment">// 等价</span>
<span class="token keyword">import</span> a <span class="token keyword">from</span> <span class="token string">&quot;./a.js&quot;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> a <span class="token operator">=</span> a<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用node开发一个静态资源服务器 js中import</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>content-type:text/javascript
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="commonjs规范的原理" tabindex="-1"><a class="header-anchor" href="#commonjs规范的原理" aria-hidden="true">#</a> commonjs规范的原理</h2><blockquote><p>node中的__dirname是怎么来的。</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">exports<span class="token punctuation">,</span>require<span class="token punctuation">,</span>module<span class="token punctuation">,</span>__filename<span class="token punctuation">,</span>__dirname</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 我们就可以使用</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;__dirname&quot;</span><span class="token punctuation">,</span>__dirname<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function N(I,M){const c=o("CodeGroupItem"),i=o("CodeGroup"),e=o("ExternalLinkIcon");return u(),d("div",null,[b,g,h,a(i,null,{default:p(()=>[a(c,{title:"index.html"},{default:p(()=>[_]),_:1}),a(c,{title:"app.js"},{default:p(()=>[f]),_:1})]),_:1}),q,n("p",null,[s("根据官网的描述"),n("a",j,[s("Dependency Pre-Bundling | Vite (vitejs.dev)"),a(e)]),s(" 它主要解决两个问题")]),y,n("p",null,[n("a",w,[s("Env Variables and Modes | Vite (vitejs.dev)"),a(e)])]),n("blockquote",null,[n("p",null,[s("环境变量: 会根据当前的代码环境产生值的变化的变量就叫做环境变量 ---来自"),n("a",x,[s("vite环境变量处理_哔哩哔哩_bilibili"),a(e)])])]),V,n("p",null,[s("根据官网"),n("a",C,[s("Configuring Vite | environment-variables"),a(e)]),s("描述,默认是没有将env文件解析挂在到process上的。")]),E])}const D=l(m,[["render",N],["__file","08 vite.html.vue"]]);export{D as default};
