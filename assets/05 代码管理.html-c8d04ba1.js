import{_ as l,M as r,p as c,q as u,R as n,t as s,N as e,V as t,a1 as p}from"./framework-f3fd2962.js";const d="/assets/image-20220926235207875-551fb833.png",k="/assets/image-20220926234553259-be7f9ae8.png",m="/assets/image-20220926233108730-895b5acb.png",v="/assets/image-20220926233710619-e438bbdc.png",b="/assets/image-20220927015913596-a0eaebde.png",h={},g=n("h2",{id:"eslint",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#eslint","aria-hidden":"true"},"#"),s(" Eslint")],-1),_={class:"custom-container tip"},y=n("p",{class:"custom-container-title"},"TIP",-1),f={href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"},j=p(`<p>安装依赖,需要存在<code>package.json</code>文件,所以必须是npm管理的项目</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> init @eslint/config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在执行上面的命令后会自动生成一个<code>.eslintrc.{js,yml,json}</code>文件。我们就可以在里面配置规则了。js后缀，有一个问题，需要我们在env中指定node,不然会报错<code>module is not defined</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">browser</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">es2021</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">node</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token string">&#39;eslint:recommended&#39;</span><span class="token punctuation">,</span>  <span class="token comment">// 继承使用eslint默认的推荐规则</span>
  <span class="token literal-property property">overrides</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">parserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">ecmaVersion</span><span class="token operator">:</span> <span class="token string">&#39;latest&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sourceType</span><span class="token operator">:</span> <span class="token string">&#39;module&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vscode-eslint插件" tabindex="-1"><a class="header-anchor" href="#vscode-eslint插件" aria-hidden="true">#</a> vscode-eslint插件</h3>`,5),x={href:"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint",target:"_blank",rel:"noopener noreferrer"},w=n("p",null,[n("strong",null,"需要在项目中安装eslint依赖")],-1),S=n("p",null,[n("img",{src:d,alt:"image-20220926235207875"})],-1),P=n("h2",{id:"prettier",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#prettier","aria-hidden":"true"},"#"),s(" Prettier")],-1),T={class:"custom-container tip"},q=n("p",{class:"custom-container-title"},"TIP",-1),E=n("p",null,"代码格式化",-1),L={href:"https://prettier.io/",target:"_blank",rel:"noopener noreferrer"},C=n("h3",{id:"vscode-prettier插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vscode-prettier插件","aria-hidden":"true"},"#"),s(" vscode Prettier插件")],-1),V={href:"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode",target:"_blank",rel:"noopener noreferrer"},I=n("code",null,"prettier --write",-1),J=n("code",null,"CMD + Shift + P -> Format Document",-1),N=p('<p><img src="'+k+`" alt="image-20220926234553259"></p><p>该插件使用推荐的方式是在我们开发项目的时候，建议在项目中安装prettier。如果项目中没有安装prettier模块，那么将使用该插件绑定的prettier。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> --save-dev --save-exact prettier
<span class="token function">npm</span> <span class="token function">install</span> prettier <span class="token parameter variable">-D</span> --save-exact
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>安装该插件后，默认为我们配置美化的设置,根据下图打开vscode默认的设置</p><p><img src="`+m+`" alt="image-20220926233108730"></p><p>在文件<code>defaultSettings.json</code>中可以看到该插件为我们默认配置了美化的设置。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// 使用单引号而不是双引号</span>
<span class="token property">&quot;prettier.singleQuote&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token comment">// 在所有代码语句的末尾添加分号</span>
<span class="token property">&quot;prettier.semi&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是不同的开发者可能会更改，prettier建议在项目中创建两个文件</p><p><img src="`+v+`" alt="image-20220926233710619"></p><ul><li><p>Use <code>.prettierignore</code> to ignore (i.e. not reformat) certain files and folders completely.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 要忽略的文件夹</span>
build
coverage

<span class="token comment"># 忽略的文件</span>
*.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>.prettierrc.json</code>配置自己的设置，这样可以覆盖默认的设置</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;singleQuote&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> 
  <span class="token property">&quot;semi&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="eslint-config-prettier" tabindex="-1"><a class="header-anchor" href="#eslint-config-prettier" aria-hidden="true">#</a> eslint-config-prettier</h2><p>use <strong>Prettier for formatting</strong> and <strong>linters for catching bugs</strong></p>`,12),G=n("p",null,"eslint通常包括两种风格：校验代码的规则和格式美化的规则，当使用prettier时，eslint的格式美化规则不是必须的，甚至多余，还能会影响到prettier.",-1),O={href:"https://prettier.io/docs/en/integrating-with-linters.html",target:"_blank",rel:"noopener noreferrer"},D={href:"https://github.com/prettier/eslint-config-prettier#installation",target:"_blank",rel:"noopener noreferrer"},M=n("h2",{id:"参考配置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考配置","aria-hidden":"true"},"#"),s(" 参考配置")],-1),Q={href:"https://github.com/vitejs/awesome-vite#templates",target:"_blank",rel:"noopener noreferrer"},B=p(`<p>如prettierrc的配置</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">semi</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token comment">// 在所有代码语句的末尾不添加分号</span>
  <span class="token literal-property property">arrowParens</span><span class="token operator">:</span> <span class="token string">&#39;avoid&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 箭头函数仅有一个参数时，参数不添加括号</span>
  <span class="token literal-property property">singleQuote</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">// 使用单引号而不是双引号</span>
  <span class="token literal-property property">tabWidth</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>	<span class="token comment">// 指定一个制表符等于的空格数</span>
  <span class="token literal-property property">endOfLine</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 指定文件的结尾换行符</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="javascript-style-guide" tabindex="-1"><a class="header-anchor" href="#javascript-style-guide" aria-hidden="true">#</a> JavaScript Style Guide</h2>`,3),F=n("p",null,"Everyone writes JavaScript a little differently. We finally decided it was time that we got together and agree on how we write JavaScript.",-1),W={href:"https://github.com/airbnb/javascript",target:"_blank",rel:"noopener noreferrer"},A=n("p",null,"我们可以使用eslint来配置，来统一这种风格",-1),R=n("h2",{id:"实战",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#实战","aria-hidden":"true"},"#"),s(" 实战")],-1),U=n("p",null,"根据下面的文档依次安装配置",-1),z={href:"https://www.npmjs.com/package/eslint-plugin-prettier",target:"_blank",rel:"noopener noreferrer"},H={href:"https://www.npmjs.com/package/eslint-config-airbnb-base",target:"_blank",rel:"noopener noreferrer"},K={href:"https://github.com/prettier/eslint-config-prettier#readme",target:"_blank",rel:"noopener noreferrer"},X=n("p",null,"效果",-1),Y=n("p",null,[n("img",{src:b,alt:"image-20220927015913596"})],-1),Z=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[s("module"),n("span",{class:"token punctuation"},"."),s("exports "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token literal-property property"},"env"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"browser"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token literal-property property"},"es2021"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token literal-property property"},"node"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token keyword"},"extends"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'airbnb-base'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'prettier'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token literal-property property"},"overrides"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token literal-property property"},"parserOptions"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"ecmaVersion"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'latest'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token literal-property property"},"sourceType"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'module'"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token literal-property property"},"plugins"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'prettier'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token literal-property property"},"rules"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token string-property property"},"'prettier/prettier'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'error'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string-property property"},"'arrow-body-style'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'off'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string-property property"},"'prefer-arrow-callback'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'off'"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),$=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},'"singleQuote"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(` 
  `),n("span",{class:"token property"},'"semi"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"endOfLine"'),n("span",{class:"token operator"},":"),n("span",{class:"token string"},'"lf"'),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),nn=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[n("span",{class:"token property"},'"devDependencies"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"eslint"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"^8.24.0"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"eslint-config-airbnb-base"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"^15.0.0"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"eslint-config-prettier"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"^8.5.0"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"eslint-plugin-import"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"^2.26.0"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"eslint-plugin-prettier"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"^4.2.1"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"prettier"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"2.7.1"'),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),sn=n("h2",{id:"typescript-eslint",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#typescript-eslint","aria-hidden":"true"},"#"),s(" typescript Eslint")],-1),en={href:"https://typescript-eslint.io/",target:"_blank",rel:"noopener noreferrer"},an=n("blockquote",null,[n("p",null,[n("strong",null,[n("code",null,"typescript-eslint"),s(" enables ESLint to run on TypeScript code.")]),s(" It brings in the best of both tools to help you write the best JavaScript or TypeScript code you possibly can.")])],-1),tn=n("p",null,"将上面的配置进行改造",-1),on={href:"https://typescript-eslint.io/docs/linting/configs",target:"_blank",rel:"noopener noreferrer"};function rn(pn,ln){const a=r("ExternalLinkIcon"),o=r("CodeGroupItem"),i=r("CodeGroup");return c(),u("div",null,[g,n("div",_,[y,n("p",null,[n("a",f,[s("Find and fix problems in your JavaScript code - ESLint - Pluggable JavaScript Linter"),e(a)])])]),j,n("p",null,[n("a",x,[s("ESLint - Visual Studio Marketplace"),e(a)]),s("安装该插件的好处是，不用我们手动执行命令行来进行检查，而是直接在vscode中显示了。")]),w,S,P,n("div",T,[q,E,n("p",null,[n("a",L,[s("Prettier · Opinionated Code Formatter"),e(a)])])]),C,n("p",null,[n("a",V,[s("Prettier - Code formatter - Visual Studio Marketplace"),e(a)]),s("。使用插件的好处是不用我们，手动去执行命令行，如"),I,s("来格式化代码。该插件的快捷键"),J,s("来格式化代码。但是通常的开发方式是，保存文件时就格式化代码。我们可以打开，默认是关闭的。")]),N,n("blockquote",null,[G,n("p",null,[s("来自"),n("a",O,[s("Integrating with Linters · Prettier"),e(a)])])]),n("p",null,[s("所以出现了"),n("a",D,[s("eslint-config-prettier"),e(a)]),s(" Turns off all rules that are unnecessary or might conflict with Prettier.")]),M,n("p",null,[s("vite维护了社区模板，可以参考"),n("a",Q,[s("vitejs/awesome-vite: ⚡️ A curated list of awesome things related to Vite.js (github.com)"),e(a)])]),B,n("blockquote",null,[F,n("p",null,[s("来自"),n("a",W,[s("airbnb/javascript: JavaScript Style Guide (github.com)"),e(a)])])]),A,R,U,n("ul",null,[n("li",null,[n("a",z,[s("eslint-plugin-prettier"),e(a)]),s(" eslint校验prettier的风格，如果没有prettier的风格则eslint报错。")]),n("li",null,[n("a",H,[s("eslint-config-airbnb-base"),e(a)]),s(" 校验airbng风格,如果没有airbng javascript的风格则eslint报错（内置了eslint的规则）")]),n("li",null,[n("a",K,[s("eslint-config-prettier"),e(a)]),s(" : Turns off all rules that are unnecessary or might conflict with Prettier")])]),X,Y,e(i,null,{default:t(()=>[e(o,{title:".eslintrc.js"},{default:t(()=>[Z]),_:1}),e(o,{title:".prettierrc.json"},{default:t(()=>[$]),_:1}),e(o,{title:"package.json"},{default:t(()=>[nn]),_:1})]),_:1}),sn,n("p",null,[n("a",en,[s("TypeScript ESLint (typescript-eslint.io)"),e(a)]),s("Tooling which enables ESLint to support TypeScript")]),an,tn,n("p",null,[n("a",on,[s("Configurations | TypeScript ESLint (typescript-eslint.io)"),e(a)])])])}const un=l(h,[["render",rn],["__file","05 代码管理.html.vue"]]);export{un as default};
