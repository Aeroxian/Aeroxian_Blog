import{_ as a,M as r,p as o,q as i,R as e,t as l,N as n,a1 as s}from"./framework-f3fd2962.js";const c="/assets/IMG_20230328_161548-af9490e5.png",h={},d=s('<h1 id="github-fork-详解" tabindex="-1"><a class="header-anchor" href="#github-fork-详解" aria-hidden="true">#</a> github fork 详解</h1><h2 id="使用背景" tabindex="-1"><a class="header-anchor" href="#使用背景" aria-hidden="true">#</a> 使用背景</h2><blockquote><p>我在学习 vue3 + typescirpt 的项目实践，但源码本身的注释并没有多少注释，这时虽然可以直接 clone 代码，我同时又希望这份代码可以与远端仓库保持一致，所以顺道了解 fork 这个操作</p></blockquote><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h2><p>fork 是 github 上的操作，使用 fork 功能会在 github 上，给你创建一个与该项目一样的同名项目。其实就是复制该项目，包括其中的文件，提交的历史，issue,和其他的一些内容，复制后的仓库存放于你自己的 github 账号下 <img src="'+c+'" alt="图 1"></p><ol><li>fork 一下 Joe 的 github 的仓库地址，到我们自己的 github 仓库下</li><li>git clone 到本地电脑中</li><li>我们做一些代码的修改</li><li>本地进行 commit</li><li>push 到我们自己的仓库中</li><li>发起 Pull request 如果对方接受了我们的 pull request,那么我们做的一些修改，就可以合入到他的仓库中了，整个流程就走完了。</li></ol><p>关联上游仓库，可以保证后面可以同步上游仓库的代码 <code>git remote add upstream XX</code></p><p>如果用github desktop 来fork，只需要一路跟着可视化选项选即可</p><p>由于我只需要同步上游代码即可 不需要上传代码 <code>git fetch upstream</code></p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',10),u={href:"https://blog.csdn.net/liuqiao0327/article/details/110671028",target:"_blank",rel:"noopener noreferrer"};function p(f,_){const t=r("ExternalLinkIcon");return o(),i("div",null,[d,e("p",null,[e("a",u,[l("fork 参考"),n(t)])])])}const b=a(h,[["render",p],["__file","fork.html.vue"]]);export{b as default};
